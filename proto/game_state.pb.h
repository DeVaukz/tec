// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_state.proto

#ifndef PROTOBUF_game_5fstate_2eproto__INCLUDED
#define PROTOBUF_game_5fstate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "components.pb.h"
// @@protoc_insertion_point(includes)

namespace tec {
namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_game_5fstate_2eproto();
void protobuf_AssignDesc_game_5fstate_2eproto();
void protobuf_ShutdownFile_game_5fstate_2eproto();

class GameStateUpdate;

// ===================================================================

class GameStateUpdate : public ::google::protobuf::Message {
 public:
  GameStateUpdate();
  virtual ~GameStateUpdate();

  GameStateUpdate(const GameStateUpdate& from);

  inline GameStateUpdate& operator=(const GameStateUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameStateUpdate& default_instance();

  void Swap(GameStateUpdate* other);

  // implements Message ----------------------------------------------

  inline GameStateUpdate* New() const { return New(NULL); }

  GameStateUpdate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameStateUpdate& from);
  void MergeFrom(const GameStateUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GameStateUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 state_id = 1;
  bool has_state_id() const;
  void clear_state_id();
  static const int kStateIdFieldNumber = 1;
  ::google::protobuf::uint64 state_id() const;
  void set_state_id(::google::protobuf::uint64 value);

  // repeated .tec.proto.Entity entity = 2;
  int entity_size() const;
  void clear_entity();
  static const int kEntityFieldNumber = 2;
  const ::tec::proto::Entity& entity(int index) const;
  ::tec::proto::Entity* mutable_entity(int index);
  ::tec::proto::Entity* add_entity();
  const ::google::protobuf::RepeatedPtrField< ::tec::proto::Entity >&
      entity() const;
  ::google::protobuf::RepeatedPtrField< ::tec::proto::Entity >*
      mutable_entity();

  // @@protoc_insertion_point(class_scope:tec.proto.GameStateUpdate)
 private:
  inline void set_has_state_id();
  inline void clear_has_state_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 state_id_;
  ::google::protobuf::RepeatedPtrField< ::tec::proto::Entity > entity_;
  friend void  protobuf_AddDesc_game_5fstate_2eproto();
  friend void protobuf_AssignDesc_game_5fstate_2eproto();
  friend void protobuf_ShutdownFile_game_5fstate_2eproto();

  void InitAsDefaultInstance();
  static GameStateUpdate* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GameStateUpdate

// required uint64 state_id = 1;
inline bool GameStateUpdate::has_state_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameStateUpdate::set_has_state_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameStateUpdate::clear_has_state_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameStateUpdate::clear_state_id() {
  state_id_ = GOOGLE_ULONGLONG(0);
  clear_has_state_id();
}
inline ::google::protobuf::uint64 GameStateUpdate::state_id() const {
  // @@protoc_insertion_point(field_get:tec.proto.GameStateUpdate.state_id)
  return state_id_;
}
inline void GameStateUpdate::set_state_id(::google::protobuf::uint64 value) {
  set_has_state_id();
  state_id_ = value;
  // @@protoc_insertion_point(field_set:tec.proto.GameStateUpdate.state_id)
}

// repeated .tec.proto.Entity entity = 2;
inline int GameStateUpdate::entity_size() const {
  return entity_.size();
}
inline void GameStateUpdate::clear_entity() {
  entity_.Clear();
}
inline const ::tec::proto::Entity& GameStateUpdate::entity(int index) const {
  // @@protoc_insertion_point(field_get:tec.proto.GameStateUpdate.entity)
  return entity_.Get(index);
}
inline ::tec::proto::Entity* GameStateUpdate::mutable_entity(int index) {
  // @@protoc_insertion_point(field_mutable:tec.proto.GameStateUpdate.entity)
  return entity_.Mutable(index);
}
inline ::tec::proto::Entity* GameStateUpdate::add_entity() {
  // @@protoc_insertion_point(field_add:tec.proto.GameStateUpdate.entity)
  return entity_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tec::proto::Entity >&
GameStateUpdate::entity() const {
  // @@protoc_insertion_point(field_list:tec.proto.GameStateUpdate.entity)
  return entity_;
}
inline ::google::protobuf::RepeatedPtrField< ::tec::proto::Entity >*
GameStateUpdate::mutable_entity() {
  // @@protoc_insertion_point(field_mutable_list:tec.proto.GameStateUpdate.entity)
  return &entity_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tec

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_5fstate_2eproto__INCLUDED
